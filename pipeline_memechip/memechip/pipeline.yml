# the genome to use
genome: mm10

# location of indexed genome
genome_dir: /gfs/mirror/genomes/plain

# database options for csv2db script
csv2db_options: --backend=sqlite --retry --map=gene_id:str --map=contig:str --map=transcript_id:str 

infile:
    # common input formats are:
    # MACS2 (".narrowPeak" or filtered or merged peaks from pipeline_atac)
    # DESeq2 differentially accessible peaks (from pipeline_atac DESeq2 notebook)
    # other (in this case peak center will be the middle of the peak, not read pileup)

    # Specify "macs2", "deseq2", or "other"
    format: other
    
memechip:
    # conda env name to run meme-chip (must be python 2)
    env: meme
    
    # list of public Db's
    motif_db:
        - /gfs/mirror/TRANSFAC/dat/meme/transfac_vertebrate.meme

    #### MEME OPTIONS ####
    # meme-mod:
    # oops - One Occurence Per Seqeunce - meme assumes that each sequence only contains 1 occurence of each motif
    #      - fastest and most sensitive, but motifs returned may be "blurry" if any sequences lack them
    # zoops - Zero or One Occurence Per Sequence - meme assumes that each sequence contains at most one occurence of each motif
    #       - takes twice as long as oops, useful when motif may not be present in all sequences, but less sensitive to weak motifs present in all sequences
    # anr - Any Numer of Repetitions - meme assumes that each sequence contains any number of non-overlapping occurences of each motif
    #     - Useful if motifs repeat multiple times within a sequence. If this is the case then will be much more sensitve than oops & zoops.
    #     - Takes 10x more computing power than option 1 and is less sensitive to weak, non-repeated motifs

    # meme-nmotifs:
    # The number of motifs that MEME should search for. Default = 3

    # meme-maxsize:
    # Largest allowed dataset for meme. e.g. 600 x 100bp sequences = 600,000 (this is the default max)
    # be careful of making this too large as it takes a very long time to run meme on large datasets

    options: -meme-mod zoops -meme-nmotifs 3 -meme-minw 5 -meme-maxw 30 -ccut 0 -meme-maxsize 600000

    # No. of peaks meme should search for sequences in. Ranked high -> low in score col. 5
    npeaks:
        - 50
        - 100

    # distance from peak center in wich to search for motifs
    widths:
        - 100
        - 200


ame:
    # known motifs to search for in infiles
    motif_db: /gfs/mirror/TRANSFAC/dat/meme/transfac_vertebrate.meme

mast:
    # optionally specify de novo discovered motif to search for w/ mast (currently only works for 1 motif)
    # path to meme_out/meme.txt, no. of motif in file, and the motif name (seperated with comma)
    meme_motif:
    
    # Specify TFs for mast to search for, must be caps!
    # reccomended to use end of line match '$' after names
    motifs:
        - 

    # specify meme formatted motif db(s) to search for known motifs
    motif_db:
        -
    
    # background options: "custom" (for flanking sequences), or False (for default)
    background: custom

annotations:

    database: /gfs/mirror/annotations/mm10_ensembl83/csvdb

    mm10dir: /gfs/mirror/annotations/mm10_ensembl83/

    # chrom sizes file (chromosome, size)
    chrom_sizes: /gfs/mirror/annotations/mm10_ensembl85/assembly.dir/contigs.tsv

report:
    # path to Jupyter .ipynb template(s).  
    path:
        - ~/devel/my_scripts/git_repo/pipeline_memechip/reports/MEME_ChIP_Pipeline_Report_MEME.ipynb
        - ~/devel/my_scripts/git_repo/pipeline_memechip/reports/MEME_ChIP_Pipeline_Report_DREME.ipynb




